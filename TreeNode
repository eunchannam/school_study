#include <stdlib.h>
#include <stdio.h>
#include <malloc.h>
#include <string>

typedef int element;

typedef struct TreeNode {
	element data;
	struct TreeNode* left, * right;
}TreeNode;

void preorder(TreeNode* node) {
	if (node != NULL) {
		printf("%d, ", node->data);
		preorder(node->left);
		preorder(node->right);
	}
}

void inorder(TreeNode* node) {
	if (node != NULL) {
		inorder(node->left);
		printf("%d, ", node->data);
		inorder(node->right);
	}
}

void postorder(TreeNode* node) {
	if (node != NULL) {
		postorder(node->left);
		postorder(node->right);
		printf("%d, ", node->data);
	}
}


int main()
{
	TreeNode* n1 = (TreeNode*)malloc(sizeof(TreeNode));
	TreeNode* n2 = (TreeNode*)malloc(sizeof(TreeNode));
	TreeNode* n3 = (TreeNode*)malloc(sizeof(TreeNode));

	n1->data = 10;
	n1->left = n2;
	n1->right = n3;
	n2->data = 20;
	n2->left = NULL;
	n2->right = NULL;
	n3->data = 30;
	n3->left = NULL;
	n3->right = NULL;

	preorder(n1);
	printf("\n");
	inorder(n1);
	printf("\n");
	postorder(n1);

	return 0;
}
