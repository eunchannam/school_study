#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>

typedef char element;
typedef struct {
	int cap;
	int top;
	element* data;
}stacktype;

void init_stack(stacktype* s) {
	s->cap = 1;
	s->top = -1;
	s->data = (element*)malloc(sizeof(element));
}

int is_full(stacktype* s) {
	if (s->top == (s->cap) - 1) return 1;
	return 0;
}

int is_empty(stacktype* s) {
	if (s->top == -1) return 1;
	return 0;
}

void push(stacktype* s, element item) {
	if (is_full(s)) {
		s->cap *= 2;
		s->data = (element*)realloc(s->data, s->cap * sizeof(element));
	}
	s->data[++(s->top)] = item;
}

element pop(stacktype* s) {
	if (is_empty(s)) {
		fprintf(stderr, "스택 공백 에러");
		exit(1);
	}
	else return s->data[(s->top)--];
}

element peek(stacktype* s) {
	if (is_empty(s)) {
		fprintf(stderr, "스택 공백 에러");
		exit(1);
	}
	else return s->data[(s->top)];
}

int prec(char ch) {
	if (ch == '(' || ch == ')') return 0;
	else if (ch == '+' || ch == '-') return 1;
	else if (ch == '*' || ch == '/') return 2;

	else return -1;
}

void change_fix(char v[30]) {
	char ch, top_op;
	stacktype s;
	init_stack(&s);

	int n = strlen(v);

	for (int i = 0; i < n; i++) {
		ch = v[i];
		if (ch == '+' || ch == '-' || ch == '*' || ch == '/') {
			while (!is_empty(&s) && prec(ch) <= prec(peek(&s))) {
				printf("%c", pop(&s));
			}
			push(&s, ch);
		}
		else if (ch == '(') {
			push(&s, ch);
		}
		else if (ch == ')') {
			top_op = pop(&s);
			while (top_op != '(') {
				printf("%c", top_op);
				top_op = pop(&s);
			}
		}
		else printf("%c", ch);
	}
	while (!is_empty(&s)) printf("%c", pop(&s));
}

int main()
{
	char v[30] = "(2+3)*4+9";
	
	change_fix(v);

	return 0;
}
